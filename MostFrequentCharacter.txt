import java.util.HashMap;
You have to find if the given two strings are anagram or not. An anagram of a string is another string that contains the same characters; only the order of characters can be different. For example: “listen”, and “silent” are anagrams of each other. Given two strings to the function isAnagram(), you have to find whether the strings are anagram or not. If the strings are anagram, you need to return true else false. You do not need to carry any input or printing operation. Just complete the function. Hint: Try using treemap for checking the anagram string. Input: “listen” “silent” Output: true Input: “caat” “cat” Output: false

import java.util.Map;

public class MostFrequentCharacter {

  public static void main(String[] args) {
    String s = "Hello World!!Welcome to Java!!";
    Map<Character, Integer> freq = new HashMap<>();
    for (int i=0; i<s.length(); i++) {
      char c = s.charAt(i);
      int initial = freq.getOrDefault(c, 0);
      freq.put(c, initial+1);
    }
    int max=0;
    char maxChar='a';
    for (Map.Entry<Character, Integer> entry: freq.entrySet()) {
      if (entry.getValue()>max) {
        max = entry.getValue();
        maxChar = entry.getKey();
      }
    }
    System.out.println("MaxChar : "+maxChar);
  }
}